"""Initial migration

Revision ID: 83e8d2b2ae1d
Revises: 
Create Date: 2025-01-02 11:30:40.518428

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '83e8d2b2ae1d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('athletes',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('birthdate', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='gender'), nullable=False),
    sa.Column('sport', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('batch_operations',
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('total_items', sa.Integer(), nullable=False),
    sa.Column('processed_items', sa.Integer(), nullable=True),
    sa.Column('errors', sa.JSON(), nullable=True),
    sa.Column('batch_metadata', sa.JSON(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('sport', sa.String(), nullable=False),
    sa.Column('gender', sa.String(), nullable=False),
    sa.Column('age_range', sa.JSON(), nullable=True),
    sa.Column('is_custom', sa.Boolean(), nullable=True),
    sa.Column('group_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sport', 'gender', 'name', name='unq_group_sport_gender_name')
    )
    op.create_table('test_definitions',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('primary_unit', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('required_fields', sa.JSON(), nullable=False),
    sa.Column('optional_fields', sa.JSON(), nullable=True),
    sa.Column('normalization_formula', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('anthropometric_data',
    sa.Column('athlete_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('standing_reach', sa.Float(), nullable=True),
    sa.Column('neck_circumference', sa.Float(), nullable=True),
    sa.Column('waist_circumference', sa.Float(), nullable=True),
    sa.Column('hip_circumference', sa.Float(), nullable=True),
    sa.Column('seated_height', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['athlete_id'], ['athletes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('athlete_groups',
    sa.Column('athlete_id', sa.UUID(), nullable=False),
    sa.Column('group_id', sa.UUID(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['athlete_id'], ['athletes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('athlete_id', 'group_id', name='unq_athlete_group')
    )
    op.create_table('batch_results',
    sa.Column('batch_operation_id', sa.UUID(), nullable=False),
    sa.Column('item_index', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('result_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['batch_operation_id'], ['batch_operations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('normative_data',
    sa.Column('test_definition_id', sa.UUID(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('subcategory', sa.String(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('percentile', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['test_definition_id'], ['test_definitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_results',
    sa.Column('test_definition_id', sa.UUID(), nullable=False),
    sa.Column('athlete_id', sa.UUID(), nullable=False),
    sa.Column('test_date', sa.DateTime(), nullable=False),
    sa.Column('primary_value', sa.Float(), nullable=False),
    sa.Column('additional_values', sa.JSON(), nullable=True),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('validated', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['athlete_id'], ['athletes.id'], ),
    sa.ForeignKeyConstraint(['test_definition_id'], ['test_definitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_analyses',
    sa.Column('test_result_id', sa.UUID(), nullable=False),
    sa.Column('analyzer_type', sa.String(), nullable=False),
    sa.Column('metrics', sa.JSON(), nullable=False),
    sa.Column('interpretation', sa.JSON(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['test_result_id'], ['test_results.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_analyses')
    op.drop_table('test_results')
    op.drop_table('normative_data')
    op.drop_table('batch_results')
    op.drop_table('athlete_groups')
    op.drop_table('anthropometric_data')
    op.drop_table('test_definitions')
    op.drop_table('groups')
    op.drop_table('batch_operations')
    op.drop_table('athletes')
    # ### end Alembic commands ###
